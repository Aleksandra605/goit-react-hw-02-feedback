{"version":3,"sources":["component/component.module.css","reportWebVitals.js","component/FeedbackOptions.js","component/Statistics.js","component/Notification.js","component/SectionFeedback.js","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FeedbackOptions","onLeaveGoodFB","onLeaveNeutralFB","onLeaveBadFB","onClick","className","s","good","neutral","bad","Statistics","total","percentage","list","item","span","Notification","message","Section","this","props","title","countGoodFB","countNeutralFB","countBadFB","section","React","Component","App","state","setState","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b282c5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"component_section__6gyiY\",\"list\":\"component_list__afXP2\",\"item\":\"component_item__2_8U3\",\"good\":\"component_good__gsnk7\",\"bad\":\"component_bad__QAMJU\",\"neutral\":\"component_neutral__2M88e\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import s from './component.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function FeedbackOptions({\n  onLeaveGoodFB,\n  onLeaveNeutralFB,\n  onLeaveBadFB,\n}) {\n  return (\n    <div>\n      <button onClick={onLeaveGoodFB} className={s.good}>\n        Good\n      </button>\n      <button onClick={onLeaveNeutralFB} className={s.neutral}>\n        Neutral\n      </button>\n      <button onClick={onLeaveBadFB} className={s.bad}>\n        Bad\n      </button>\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveGoodFB: PropTypes.func,\n  onLeaveNeutralFB: PropTypes.func,\n  onLeaveBadFB: PropTypes.func,\n};\n","import s from './component.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Statistics({ good, neutral, bad, total, percentage }) {\n  return (\n    <ul className={s.list}>\n      <li className={s.item}>\n        Good <span className={s.span}>{good}</span>\n      </li>\n      <li className={s.item}>\n        Neutral <span className={s.span}>{neutral}</span>\n      </li>\n      <li className={s.item}>\n        Bad <span className={s.span}>{bad}</span>\n      </li>\n      <li className={s.item}>\n        Total<span className={s.span}>{total}</span>\n      </li>\n      <li className={s.item}>\n        Positive feedback <span className={s.span}>{percentage}%</span>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  percentage: PropTypes.number,\n};\n","export default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n","import s from './component.module.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport Notification from './Notification';\n\nclass Section extends React.Component {\n  static propTypes = {\n    title: PropTypes.string,\n  };\n\n  render() {\n    let {\n      title,\n      countGoodFB,\n      countNeutralFB,\n      countBadFB,\n      good,\n      bad,\n      neutral,\n      total,\n      percentage,\n    } = this.props;\n    return (\n      <section className={s.section}>\n        <h2>{title}</h2>\n        <FeedbackOptions\n          onLeaveGoodFB={countGoodFB}\n          onLeaveNeutralFB={countNeutralFB}\n          onLeaveBadFB={countBadFB}\n        />\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            percentage={percentage}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import React from 'react';\nimport './App.css';\nimport Section from './component/SectionFeedback';\nimport PropTypes from 'prop-types';\n\nclass App extends React.Component {\n  static propTypes = {\n    good: PropTypes.number,\n    bad: PropTypes.number,\n    neutral: PropTypes.number,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countGoodFB = () => {\n    this.setState(prevState => ({\n      good: ++prevState.good,\n    }));\n  };\n\n  countBadFB = () => {\n    this.setState(prevState => ({\n      bad: ++prevState.bad,\n    }));\n  };\n\n  countNeutralFB = () => {\n    this.setState(prevState => ({\n      neutral: ++prevState.neutral,\n    }));\n  };\n\n  // countTotalFeedback = () => {\n  //   let total = this.state.good + this.state.bad + this.state.neutral;\n  //   console.log(total);\n  //   return total;\n  // };\n\n  // countPositiveFeedbackPercentage = () => {\n  //   let percentage = Math.round(\n  //     (this.state.good / this.countTotalFeedback()) * 100,\n  //   );\n  //   return percentage;\n  // };\n\n  render() {\n    let { good, neutral, bad } = this.state;\n    let total = good + bad + neutral;\n    let percentage = Math.round((good / total) * 100);\n    // total={this.countTotalFeedback()}\n    // percentage={this.countPositiveFeedbackPercentage()}\n\n    return (\n      <Section\n        title=\"Please leave feedback\"\n        good={good}\n        bad={bad}\n        neutral={neutral}\n        total={total}\n        percentage={percentage}\n        countGoodFB={this.countGoodFB}\n        countBadFB={this.countBadFB}\n        countNeutralFB={this.countNeutralFB}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}